"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/bfhl";
exports.ids = ["pages/api/bfhl"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbfhl&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbfhl.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbfhl&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbfhl.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_bfhl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\bfhl.js */ \"(api-node)/./pages/api/bfhl.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_bfhl_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_bfhl_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/bfhl\",\n        pathname: \"/api/bfhl\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_bfhl_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/bfhl\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/bfhl\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbfhl&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbfhl.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/bfhl.js":
/*!***************************!*\
  !*** ./pages/api/bfhl.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nfunction handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            ok: false,\n            err: 'Use POST only'\n        });\n    }\n    try {\n        const body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\n        if (!body || !Array.isArray(body.data)) {\n            return res.status(400).json({\n                ok: false,\n                err: 'Body must be { \"data\": [...] }'\n            });\n        }\n        const arr = body.data.map((x)=>typeof x === 'string' ? x : String(x));\n        const evens = [];\n        const odds = [];\n        const words = [];\n        const symbols = [];\n        let total = 0n;\n        const chars = [];\n        for (const item of arr){\n            const numOnly = /^[0-9]+$/.test(item);\n            const alphaOnly = /^[A-Za-z]+$/.test(item);\n            const symOnly = /^[^A-Za-z0-9]+$/.test(item);\n            const found = item.match(/[A-Za-z]/g);\n            if (found) chars.push(...found);\n            if (numOnly) {\n                const n = BigInt(item);\n                if (n % 2n === 0n) evens.push(item);\n                else odds.push(item);\n                total += n;\n            } else if (alphaOnly) {\n                words.push(item.toUpperCase());\n            } else if (symOnly) {\n                symbols.push(item);\n            } else {\n                symbols.push(item);\n            }\n        }\n        chars.reverse();\n        let mixed = '';\n        for(let i = 0; i < chars.length; i++){\n            mixed += i % 2 === 0 ? chars[i].toUpperCase() : chars[i].toLowerCase();\n        }\n        const uname = (process.env.FULL_NAME || 'john_doe').toLowerCase().replace(/\\s+/g, '_');\n        const dob = process.env.DOB_DDMMYYYY || '17091999';\n        const mail = process.env.EMAIL || 'john@xyz.com';\n        const roll = process.env.ROLL_NUMBER || 'ABCD123';\n        return res.status(200).json({\n            ok: true,\n            user_id: `${uname}_${dob}`,\n            email: mail,\n            roll_no: roll,\n            odds,\n            evens,\n            words,\n            symbols,\n            total: total.toString(),\n            mixed\n        });\n    } catch  {\n        return res.status(400).json({\n            ok: false,\n            err: 'Invalid JSON'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUMsSUFBSTtZQUFPQyxLQUFLO1FBQWU7SUFDL0Q7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFw5MTkxNFxcRGVza3RvcFxcYmZobC1hcGlcXHBhZ2VzXFxhcGlcXGJmaGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IG9rOiBmYWxzZSwgZXJyOiAnVXNlIFBPU1Qgb25seScgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgYm9keSA9IHR5cGVvZiByZXEuYm9keSA9PT0gJ3N0cmluZycgPyBKU09OLnBhcnNlKHJlcS5ib2R5KSA6IHJlcS5ib2R5O1xyXG4gICAgaWYgKCFib2R5IHx8ICFBcnJheS5pc0FycmF5KGJvZHkuZGF0YSkpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgb2s6IGZhbHNlLCBlcnI6ICdCb2R5IG11c3QgYmUgeyBcImRhdGFcIjogWy4uLl0gfScgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYXJyID0gYm9keS5kYXRhLm1hcCh4ID0+ICh0eXBlb2YgeCA9PT0gJ3N0cmluZycgPyB4IDogU3RyaW5nKHgpKSk7XHJcblxyXG4gICAgY29uc3QgZXZlbnMgPSBbXTtcclxuICAgIGNvbnN0IG9kZHMgPSBbXTtcclxuICAgIGNvbnN0IHdvcmRzID0gW107XHJcbiAgICBjb25zdCBzeW1ib2xzID0gW107XHJcblxyXG4gICAgbGV0IHRvdGFsID0gMG47XHJcbiAgICBjb25zdCBjaGFycyA9IFtdO1xyXG5cclxuICAgIGZvciAoY29uc3QgaXRlbSBvZiBhcnIpIHtcclxuICAgICAgY29uc3QgbnVtT25seSA9IC9eWzAtOV0rJC8udGVzdChpdGVtKTtcclxuICAgICAgY29uc3QgYWxwaGFPbmx5ID0gL15bQS1aYS16XSskLy50ZXN0KGl0ZW0pO1xyXG4gICAgICBjb25zdCBzeW1Pbmx5ID0gL15bXkEtWmEtejAtOV0rJC8udGVzdChpdGVtKTtcclxuXHJcbiAgICAgIGNvbnN0IGZvdW5kID0gaXRlbS5tYXRjaCgvW0EtWmEtel0vZyk7XHJcbiAgICAgIGlmIChmb3VuZCkgY2hhcnMucHVzaCguLi5mb3VuZCk7XHJcblxyXG4gICAgICBpZiAobnVtT25seSkge1xyXG4gICAgICAgIGNvbnN0IG4gPSBCaWdJbnQoaXRlbSk7XHJcbiAgICAgICAgaWYgKG4gJSAybiA9PT0gMG4pIGV2ZW5zLnB1c2goaXRlbSk7XHJcbiAgICAgICAgZWxzZSBvZGRzLnB1c2goaXRlbSk7XHJcbiAgICAgICAgdG90YWwgKz0gbjtcclxuICAgICAgfSBlbHNlIGlmIChhbHBoYU9ubHkpIHtcclxuICAgICAgICB3b3Jkcy5wdXNoKGl0ZW0udG9VcHBlckNhc2UoKSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoc3ltT25seSkge1xyXG4gICAgICAgIHN5bWJvbHMucHVzaChpdGVtKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzeW1ib2xzLnB1c2goaXRlbSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjaGFycy5yZXZlcnNlKCk7XHJcbiAgICBsZXQgbWl4ZWQgPSAnJztcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbWl4ZWQgKz0gKGkgJSAyID09PSAwKSA/IGNoYXJzW2ldLnRvVXBwZXJDYXNlKCkgOiBjaGFyc1tpXS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHVuYW1lID0gKHByb2Nlc3MuZW52LkZVTExfTkFNRSB8fCAnam9obl9kb2UnKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccysvZywgJ18nKTtcclxuICAgIGNvbnN0IGRvYiA9IHByb2Nlc3MuZW52LkRPQl9ERE1NWVlZWSB8fCAnMTcwOTE5OTknO1xyXG4gICAgY29uc3QgbWFpbCA9IHByb2Nlc3MuZW52LkVNQUlMIHx8ICdqb2huQHh5ei5jb20nO1xyXG4gICAgY29uc3Qgcm9sbCA9IHByb2Nlc3MuZW52LlJPTExfTlVNQkVSIHx8ICdBQkNEMTIzJztcclxuXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBvazogdHJ1ZSxcclxuICAgICAgdXNlcl9pZDogYCR7dW5hbWV9XyR7ZG9ifWAsXHJcbiAgICAgIGVtYWlsOiBtYWlsLFxyXG4gICAgICByb2xsX25vOiByb2xsLFxyXG4gICAgICBvZGRzLFxyXG4gICAgICBldmVucyxcclxuICAgICAgd29yZHMsXHJcbiAgICAgIHN5bWJvbHMsXHJcbiAgICAgIHRvdGFsOiB0b3RhbC50b1N0cmluZygpLFxyXG4gICAgICBtaXhlZFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBvazogZmFsc2UsIGVycjogJ0ludmFsaWQgSlNPTicgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsIm9rIiwiZXJyIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsIkFycmF5IiwiaXNBcnJheSIsImRhdGEiLCJhcnIiLCJtYXAiLCJ4IiwiU3RyaW5nIiwiZXZlbnMiLCJvZGRzIiwid29yZHMiLCJzeW1ib2xzIiwidG90YWwiLCJjaGFycyIsIml0ZW0iLCJudW1Pbmx5IiwidGVzdCIsImFscGhhT25seSIsInN5bU9ubHkiLCJmb3VuZCIsIm1hdGNoIiwicHVzaCIsIm4iLCJCaWdJbnQiLCJ0b1VwcGVyQ2FzZSIsInJldmVyc2UiLCJtaXhlZCIsImkiLCJsZW5ndGgiLCJ0b0xvd2VyQ2FzZSIsInVuYW1lIiwicHJvY2VzcyIsImVudiIsIkZVTExfTkFNRSIsInJlcGxhY2UiLCJkb2IiLCJET0JfRERNTVlZWVkiLCJtYWlsIiwiRU1BSUwiLCJyb2xsIiwiUk9MTF9OVU1CRVIiLCJ1c2VyX2lkIiwiZW1haWwiLCJyb2xsX25vIiwidG9TdHJpbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/bfhl.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fbfhl&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cbfhl.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();